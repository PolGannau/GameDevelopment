----------ASSIGNMENT_2----------
--------------------------------

#Internally, it should use a structured entity system that should be described
in an UML file (pdf) delivered in the same folder of the release.
--Doing this.


##Flying enemy type that can pathfind to the player avoiding non-walkable areas

##Walking enemy type that can pathfind to the player. It is not needed that the
enemy can jump (although is enouraged) but it should detect that it can reach the
player by normal walking and falling down to other platforms

#Now saving/loading must save each enemy state. Enemies normally have a range of
perception and not react to the other player untile they are close by (up to team)

#Game should have all it's movement normallized using dt, so in slow/fast machines
it would keep the same movement speed

#The code should have Brofiler integration and allow measurement of its core modules
with a big distiction between time to swap buffers (graphics), pathfinding code
and other logic code.


#Minimum Debug Keys

- F9 To view colliders and pathfinding
- F10 God Mode (allows to fly around) Improve flying
- F11 Enable/Disable FPS cap to 30